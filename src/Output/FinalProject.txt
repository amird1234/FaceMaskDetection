Namespace(human_model_path='/content/drive/MyDrive/colab/Combined/out/CombinedModel2.pth', image_path='/content/sample_data/twoWomen.jpeg', mask_model_path='/content/drive/MyDrive/colab/FaceMaskDetection/out/MaskModel2.pth', train=True)
FinalProject: should train
train_models: Training both models
len: train valid test:10429 2234 2236
dataset is now 10429
<torch.utils.data.dataset.Subset object at 0x7f1fe3fbdd90>
<torch.utils.data.dataset.Subset object at 0x7f1fd9020510>
Class Names: ['airplane', 'car', 'cat', 'dog', 'flower', 'fruit', 'mask_weared_incorrect', 'motorbike', 'with_mask', 'without_mask']
Epoch 0/9
----------
/usr/local/lib/python3.7/dist-packages/torch/optim/lr_scheduler.py:134: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
train Loss: 3.5406 Acc: 0.8530
validation Loss: 1.3827 Acc: 0.9437
Epoch 1/9
----------
train Loss: 1.9856 Acc: 0.9149
validation Loss: 0.9426 Acc: 0.9562
Epoch 2/9
----------
train Loss: 1.6548 Acc: 0.9309
validation Loss: 0.8371 Acc: 0.9621
Epoch 3/9
----------
train Loss: 1.3465 Acc: 0.9414
validation Loss: 0.9954 Acc: 0.9562
Epoch 4/9
----------
train Loss: 1.2905 Acc: 0.9449
validation Loss: 0.9102 Acc: 0.9554
Epoch 5/9
----------
train Loss: 1.1371 Acc: 0.9525
validation Loss: 0.6611 Acc: 0.9696
Epoch 6/9
----------
train Loss: 0.8537 Acc: 0.9657
validation Loss: 0.5846 Acc: 0.9701
Epoch 7/9
----------
train Loss: 0.7697 Acc: 0.9700
validation Loss: 0.5877 Acc: 0.9759
Epoch 8/9
----------
train Loss: 0.7308 Acc: 0.9677
validation Loss: 0.4605 Acc: 0.9741
Epoch 9/9
----------
train Loss: 0.6527 Acc: 0.9725
validation Loss: 0.4545 Acc: 0.9746
Training complete
Best val Acc: 0.975893
Accuracy of the model on the test images: 97.49552772808586%
Acutal label with_mask
Acutal label mask_weared_incorrect
Acutal label with_mask
Acutal label car
Acutal label mask_weared_incorrect
Acutal label mask_weared_incorrect
Acutal label without_mask
Acutal label mask_weared_incorrect
FinalProject: training human model took 0:07:20.467124
len: train valid test:6287 1347 1348
dataset is now 6287
<torch.utils.data.dataset.Subset object at 0x7f1fbefe1210>
<torch.utils.data.dataset.Subset object at 0x7f1fbefe10d0>
Class Names: ['mask_weared_incorrect', 'with_mask', 'without_mask']
Epoch 0/9
----------
train Loss: 3.1581 Acc: 0.8505
validation Loss: 1.2324 Acc: 0.9504
Epoch 1/9
----------
train Loss: 1.9309 Acc: 0.9108
validation Loss: 1.1940 Acc: 0.9519
Epoch 2/9
----------
train Loss: 1.4445 Acc: 0.9346
validation Loss: 1.1333 Acc: 0.9430
Epoch 3/9
----------
train Loss: 1.3000 Acc: 0.9423
validation Loss: 0.5871 Acc: 0.9726
Epoch 4/9
----------
train Loss: 1.1419 Acc: 0.9510
validation Loss: 0.7611 Acc: 0.9586
Epoch 5/9
----------
train Loss: 1.1388 Acc: 0.9513
validation Loss: 0.8682 Acc: 0.9527
Epoch 6/9
----------
train Loss: 0.7861 Acc: 0.9674
validation Loss: 0.6259 Acc: 0.9660
Epoch 7/9
----------
train Loss: 0.8151 Acc: 0.9626
validation Loss: 0.5361 Acc: 0.9741
Epoch 8/9
----------
train Loss: 0.7449 Acc: 0.9693
validation Loss: 0.6513 Acc: 0.9667
Epoch 9/9
----------
train Loss: 0.6709 Acc: 0.9696
validation Loss: 0.5532 Acc: 0.9778
Training complete
Best val Acc: 0.977811
Accuracy of the model on the test images: 97.77448071216617%
Acutal label without_mask
Acutal label without_mask
Acutal label mask_weared_incorrect
Acutal label mask_weared_incorrect
Acutal label without_mask
Acutal label mask_weared_incorrect
Acutal label mask_weared_incorrect
Acutal label mask_weared_incorrect
FinalProject: training mask model took 0:04:17.755209
human model successfully loaded
mask model successfully loaded
FinalProject: loading models took 0:00:00.379460
trying to classify image /content/sample_data/twoWomen.jpeg
classify if it is human
cpu
classify_is_human: this is a with_mask.
classify_is_human: it is human
cropping image
single_image_classify got 2 faces to classify
cpu
classify_mask_usage: this is a without_mask.
cpu
classify_mask_usage: this is a without_mask.
FinalProject: testing image took 0:00:00.931594
